<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tamim</groupId>
	<artifactId>myvaadin8</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>myvaadin8</name>

	<prerequisites>
		<maven>3</maven>
	</prerequisites>

	<properties>
		<vaadin.version>8.7.2</vaadin.version>
		<vaadin.plugin.version>8.7.2</vaadin.plugin.version>
		<jetty.plugin.version>9.3.9.v20160517</jetty.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- If there are no local customizations, this can also be "fetch" or 
			"cdn" -->
		<vaadin.widgetset.mode>local</vaadin.widgetset.mode>
		<log4j2.version>2.8.2</log4j2.version>
	</properties>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- JAVA DEPENDENCIES ============================================== -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.6</version>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-core</artifactId> 
			<version>${log4j2.version}</version> </dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> 
			<artifactId>log4j-api</artifactId> <version>${log4j2.version}</version> </dependency> 
			<dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-web</artifactId> 
			<version>${log4j2.version}</version> </dependency> -->
		<!-- exporter plugins has slf4j-simple-1.7.25.jar, so i don't need a seperate 
			implementation -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.9.0</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.8</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.19.4</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- VAADIN ADD-ONS ============================================== -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>grid-renderers-collection-addon</artifactId>
			<version>2.4.0</version>
		</dependency>

		<dependency>
			<groupId>com.github.vaadin4qbanos</groupId>
			<artifactId>jsclipboard</artifactId>
			<version>1.0.12</version>
		</dependency>


		<!-- DEPENDENCIES FOR THE EXAMPLE PROJECT ============================================== -->
		<!-- https://mvnrepository.com/artifact/org.vaadin/viritin -->
		<dependency>
			<groupId>org.vaadin</groupId>
			<artifactId>viritin</artifactId>
			<version>2.9</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.vaadin.teemu/switch -->
		<dependency>
			<groupId>org.vaadin.teemu</groupId>
			<artifactId>switch</artifactId>
			<version>3.0.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.tomee.patch/bval-jsr -->
		<!-- BeanValidationBinder cannot be used because a JSR-303 Bean Validation 
			implementation not found on the classpath or could not be initialized. BOTH 
			OF THE FOLLOWING -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-validation_1.0_spec</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.bval</groupId>
			<artifactId>org.apache.bval.bundle</artifactId>
			<version>0.5</version>
		</dependency>

		<!-- MAINLY FOR HEROKU -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-runner</artifactId>
			<version>${jetty.plugin.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- EXPORT GRID AND TREEGRID DATA TO EXCEL, CSV AND PDF -->
		<dependency>
			<groupId>org.vaadin.haijian</groupId>
			<artifactId>exporter</artifactId>
			<version>2.0.1</version>

			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- PDF VIEWER -->
		<dependency>
			<groupId>com.whitestein.vaadin.widgets</groupId>
			<artifactId>wt-pdf-viewer</artifactId>
			<version>2.0.1</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Exclude an unnecessary file generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- https://stackoverflow.com/questions/19655184/no-compiler-is-provided-in-this-environment-perhaps-you-are-running-on-a-jre-ra -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- <version>3.0.0</version> -->
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<!-- Clean up also any pre-compiled themes -->
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/themes</directory>
							<includes>
								<include>**/styles.css</include>
								<include>**/styles.scss.cache</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- The Jetty plugin allows us to easily test the development build by 
				running jetty:run on the command line. -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>2</scanIntervalSeconds>
					<webApp>
						<!--NOT YET TESTED!!! -->
						<!--To let the static resources be read automatically after edit, just 
							refresh the browser -->
						<!--https://www.eclipse.org/jetty/documentation/current/troubleshooting-locked-files-on-windows.html -->
						<!--<contextPath>/shinchan</contextPath> -->
						<!-- <_initParams> <org.eclipse.jetty.servlet.Default.useFileMappedBuffer>false 
							</org.eclipse.jetty.servlet.Default.useFileMappedBuffer> </_initParams> -->
					</webApp>
				</configuration>
			</plugin>

			<!-- MAINLY FOR HEROKU -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.jetty</groupId>
									<artifactId>jetty-runner</artifactId>
									<version>${jetty.plugin.version}</version>
									<destFileName>jetty-runner.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--NOT YET TESTED!!! -->
			<!--ALSO CAUSED PROBLEMS WITH HEROKU -->
			<!--It is supposed to open the page after jetty is ready! -->
			<!--https://stackoverflow.com/questions/12726184/how-to-open-a-browser-with-a-url-from-maven-build -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-antrun-plugin</artifactId> 
				<version>1.8</version> <executions> <execution> <id>Run URL in system browser.</id> 
				<phase>build</phase> <configuration> <target> <exec executable="start" vmlauncher="false"> 
				<arg line="http://localhost:8080" /> </exec> </target> </configuration> <goals> 
				<goal>run</goal> </goals> </execution> </executions> </plugin> -->
		</plugins>

	</build>

	<profiles>
		<profile>
			<!-- Vaadin pre-release repositories -->
			<id>vaadin-prerelease</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<repositories>
				<repository>
					<id>vaadin-prereleases</id>
					<url>http://maven.vaadin.com/vaadin-prereleases</url>
				</repository>
				<repository>
					<id>vaadin-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
					<releases>
						<enabled>false</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>vaadin-prereleases</id>
					<url>http://maven.vaadin.com/vaadin-prereleases</url>
				</pluginRepository>
				<pluginRepository>
					<id>vaadin-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
					<releases>
						<enabled>false</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
	</profiles>

</project>
